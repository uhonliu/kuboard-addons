---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuboard-grafana
  namespace: kube-system
  annotations:
    k8s.eip.work/workload: kuboard-grafana
    k8s.eip.work/displayName: 性能监控
    k8s.eip.work/service: ClusterIP
    k8s.eip.work/ingress: 'false'
  labels:
    k8s.eip.work/layer: monitor
    k8s.eip.work/name: kuboard-grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s.eip.work/layer: monitor
      k8s.eip.work/name: kuboard-grafana
  template:
    metadata:
      labels:
        k8s.eip.work/layer: monitor
        k8s.eip.work/name: kuboard-grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:6.6.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          subPath: grafana
        env:
        - name: INFLUXDB_HOST
          value: monitoring-influxdb
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
        - name: GF_AUTH_PROXY_ENABLED
          value: "true"
        - name: GF_SECURITY_ADMIN_USER
          value: kuboard-user
        - name: GF_SERVER_ROOT_URL
          value: "%(protocol)s://%(domain)s/grafana"
        - name: GF_SERVER_ENABLE_GZIP
          value: "true"
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      volumes:
      - name: grafana-storage
        # emptyDir: {}
        persistentVolumeClaim:
          claimName: kuboard-grafana-pvc
      tolerations:
      - key: node-role.kubernetes.io/master
        value: ""
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ""

---
apiVersion: v1
kind: Service
metadata:
  name: kuboard-grafana
  namespace: kube-system
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/tcp-probe: 'true'
    prometheus.io/tcp-probe-port: '80'
  # labels:
    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
    # If you are NOT using this as an addon, you should comment out this line.
    #kubernetes.io/cluster-service: 'true'
    #kubernetes.io/name: monitoring-grafana
spec:
  # type: NodePort
  # In a production setup, we recommend accessing Grafana through an external Loadbalancer
  # or through a public IP.
  # type: LoadBalancer
  # You could also use NodePort to expose the service at a randomly-generated port
  # type: NodePort
  #type: ClusterIP
  selector:
    k8s.eip.work/layer: monitor
    k8s.eip.work/name: kuboard-grafana
  ports:
    - name: grafana
      port: 3000
      targetPort: 3000
